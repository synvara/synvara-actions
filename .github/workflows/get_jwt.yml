name: Get GitHub OIDC JWT

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  get_jwt:
    runs-on: ubuntu-latest
    # Add permissions required for OIDC token generation
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Get GitHub OIDC ID Token
        id: get_id_token
        run: |
          ID_TOKEN=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://github.com" | jq -r '.value')
          echo "::add-mask::$ID_TOKEN"
          echo "id_token=$ID_TOKEN" >> $GITHUB_OUTPUT

      - name: Print JWT parts (split to avoid masking)
        run: |
          TOKEN="${{ steps.get_id_token.outputs.id_token }}"
          echo "JWT Header (decode with base64):"
          echo $TOKEN | cut -d'.' -f1
          echo ""
          echo "JWT Payload (decode with base64):"
          echo $TOKEN | cut -d'.' -f2
          echo ""
          echo "To decode, go to https://jwt.io/ and paste the header and payload with dots between them"

      - name: Decode JWT
        run: |
          TOKEN="${{ steps.get_id_token.outputs.id_token }}"
          HEADER=$(echo ${TOKEN} | cut -d"." -f1)
          PAYLOAD=$(echo ${TOKEN} | cut -d"." -f2)

          # Add padding if needed
          # The sed commands fix potential base64 URL encoding issues
          HEADER_PAD=$(echo -n $HEADER | sed 's/-/+/g' | sed 's/_/\//g')
          PAYLOAD_PAD=$(echo -n $PAYLOAD | sed 's/-/+/g' | sed 's/_/\//g')

          # Add padding
          REMAINDER=$((${#HEADER_PAD} % 4))
          if [ $REMAINDER -eq 1 ]; then
            HEADER_PAD="${HEADER_PAD}==="
          elif [ $REMAINDER -eq 2 ]; then
            HEADER_PAD="${HEADER_PAD}=="
          elif [ $REMAINDER -eq 3 ]; then
            HEADER_PAD="${HEADER_PAD}="
          fi

          REMAINDER=$((${#PAYLOAD_PAD} % 4))
          if [ $REMAINDER -eq 1 ]; then
            PAYLOAD_PAD="${PAYLOAD_PAD}==="
          elif [ $REMAINDER -eq 2 ]; then
            PAYLOAD_PAD="${PAYLOAD_PAD}=="
          elif [ $REMAINDER -eq 3 ]; then
            PAYLOAD_PAD="${PAYLOAD_PAD}="
          fi

          echo "Header:"
          echo $HEADER_PAD | base64 -d 2>/dev/null || echo $HEADER_PAD | base64 --decode 2>/dev/null

          echo "Payload:"
          echo $PAYLOAD_PAD | base64 -d 2>/dev/null || echo $PAYLOAD_PAD | base64 --decode 2>/dev/null
