name: Get JWT

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  get_jwt:
    runs-on: ubuntu-latest
    # Add permissions required for OIDC token generation
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Authenticate to Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "projects/837411258846/locations/global/workloadIdentityPools/github-pool/providers/github-provider" # Your Provider ID
          service_account: "github-actions-sa@github-actions-457316.iam.gserviceaccount.com"
          project_id: "github-actions-457316"
          create_credentials_file: false # We don't need the credentials file
          token_format: "id_token" # Request an ID token
          id_token_audience: "api://github.com" # Audience for the token

      - name: Print JWT (split to avoid masking)
        run: |
          TOKEN="${{ steps.auth.outputs.id_token }}"
          echo "JWT Header (decode with base64):"
          echo $TOKEN | cut -d'.' -f1
          echo ""
          echo "JWT Payload (decode with base64):"
          echo $TOKEN | cut -d'.' -f2
          echo ""
          echo "To decode, go to https://jwt.io/ and paste these parts with the dots between them"

      - name: Decode JWT
        run: |
          TOKEN="${{ steps.auth.outputs.id_token }}"
          HEADER=$(echo ${TOKEN} | cut -d"." -f1)
          PAYLOAD=$(echo ${TOKEN} | cut -d"." -f2)

          # Add padding if needed
          HEADER_PAD=$(echo -n $HEADER | sed 's/=//g' | sed 's/+/-/g' | sed 's/\//_/g')
          PAYLOAD_PAD=$(echo -n $PAYLOAD | sed 's/=//g' | sed 's/+/-/g' | sed 's/\//_/g')

          echo "Header:"
          echo $HEADER_PAD | base64 -d 2>/dev/null || echo $HEADER_PAD | base64 --decode 2>/dev/null

          echo "Payload:"
          echo $PAYLOAD_PAD | base64 -d 2>/dev/null || echo $PAYLOAD_PAD | base64 --decode 2>/dev/null
